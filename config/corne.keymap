/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        soft_off_combo {
            bindings = <&soft_off>;
            key-positions = <0 11>;
            timeout-ms = <5000>;
            slow-release;
            layers = <2>;
        };
    };

    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <13 22 14 15 16 19 20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q        &kp W            &kp E         &kp R              &kp T        &kp Y        &kp U          &kp I         &kp O            &kp P                &kp BACKSPACE
&kp LCTRL  &hrm LGUI A  &hrm LEFT_ALT S  &hrm LCTRL D  &hrm LEFT_SHIFT F  &kp G        &kp H        &hrm LSHIFT J  &hrm LCTRL K  &hrm LEFT_ALT L  &hrm LGUI SEMICOLON  &kp SQT
&kp LSHFT  &kp Z        &kp X            &kp C         &kp V              &kp B        &kp N        &kp M          &kp COMMA     &kp DOT          &kp FSLH             &kp ESC
                                         &kp LGUI      &mo 1              &kp SPACE    &lt 4 ENTER  &mo 2          &lt 3 LALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8        &kp N9     &kp N0   &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP        &kp RIGHT  &trans   &trans
&kp LSHFT   &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6    &kp F7    &kp F8        &kp F9     &kp F10  &kp F11
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp LEFT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL          &kp AT      &kp HASH    &kp DLLR           &kp PRCNT          &kp CARET  &kp AMPS   &kp ASTRK     &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans            &trans      &trans      &trans             &trans             &kp UNDER  &kp PLUS   &kp LBRC      &kp RBRC  &kp PIPE  &kp TILDE
                                         &kp LGUI    &trans             &kp SPACE          &kp RET    &trans     &kp LEFT_ALT
            >;
        };

        num_layer {
            bindings = <
&kp KP_SUBTRACT  &kp KP_PLUS    &kp N9  &kp N8  &kp N7  &kp KP_EQUAL    &trans  &trans  &trans  &trans  &trans  &trans
&trans           &kp N0         &kp N6  &kp N5  &kp N4  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&kp KP_MULTIPLY  &kp KP_DIVIDE  &kp N3  &kp N2  &kp N1  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &kp F12  &kp F9  &kp F8  &kp F7  &trans    &kp PAGE_UP    &trans    &kp UP    &trans     &kp DELETE  &kp PRINTSCREEN
&trans  &kp F11  &kp F6  &kp F5  &kp F4  &trans    &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp INSERT  &kp RET
&trans  &kp F10  &kp F3  &kp F2  &kp F1  &trans    &trans         &trans    &trans    &trans     &trans      &trans
                         &trans  &trans  &trans    &trans         &trans    &trans
            >;
        };
    };
};
