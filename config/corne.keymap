/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        soft_off_combo {
            bindings = <&soft_off>;
            key-positions = <0 11>;
            timeout-ms = <5000>;
            slow-release;
            layers = <2>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <24 35>;
            timeout-ms = <300>;
            layers = <3>;
        };

        bt_layer {
            bindings = <&to 4>;
            key-positions = <16 15 14>;
            timeout-ms = <150>;
            slow-release;
            layers = <3>;
            require-prior-idle-ms = <100>;
        };

        default_layer_combo {
            bindings = <&to 0>;
            key-positions = <19 16>;
        };
    };

    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <13 22 14 15 16 19 20 21>;
        };

        tap_dance_caps: tap_dance_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LSHFT>, <&kp CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB          &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BACKSPACE
&tap_dance_caps  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL        &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                               &kp LGUI  &to 1  &kp SPACE    &kp ENTER  &to 2  &to 3
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6   &kp N7  &kp N8  &kp N9  &kp N0  &kp BSPC
&trans     &trans  &trans  &trans    &trans  &trans       &trans   &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &trans  &trans  &trans    &trans  &trans       &trans   &trans  &trans  &trans  &trans  &to 0
                           &kp LGUI  &trans  &kp SPACE    &kp RET  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL          &kp AT      &kp HASH    &kp DLLR           &kp PRCNT          &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&kp LSHFT  &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LCTRL  &trans            &trans      &trans      &trans             &kp TILDE          &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &to 0
                                         &kp LGUI    &trans             &kp SPACE          &kp RET    &trans     &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &kp F12  &kp F9  &kp F8  &kp F7  &trans    &kp PAGE_UP    &trans    &kp UP    &trans     &kp PRINTSCREEN  &trans
&trans  &kp F11  &kp F6  &kp F5  &kp F4  &trans    &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp INSERT       &kp RET
&trans  &kp F10  &kp F3  &kp F2  &kp F1  &trans    &trans         &trans    &kp HOME  &kp END    &kp DELETE       &to 0
                         &trans  &trans  &trans    &trans         &trans    &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans        &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR_ALL  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans        &trans          &to 0
                        &trans  &trans  &trans    &trans  &trans        &trans
            >;
        };
    };
};
